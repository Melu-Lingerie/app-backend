spring:
  application:
    name: melu-lingerie
  profiles:
    active: dev

  # Data Source Configuration
  datasource:
    url: jdbc:postgresql://${DB_ADDRESS}:5432/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      auto-commit: false
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  # JPA & Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 16
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
        connection:
          provider_disables_autocommit: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect

# Server Configuration
server:
  port: 8080
  shutdown: graceful

integration:
  payments:
    api:
      storeId: ${STORE_ID:1166235}
      secretKey: ${PAYMENTS_SECRET_KEY:test_jcKZyURQ6Xr3xLWsf0ZYklU0F0RUOtBSpR8Etl6ddD4}
      baseUrl: ${PAYMENTS_API_BASE_URL:https://api.yookassa.ru/v3}
      returnUrl: ${MERCHANT_RETURN_URL:https://melu-lingerie.ru/payments/return}
    webhook:
      secret: ${PAYMENTS_WEBHOOK_SECRET:}

resilience4j:
  circuitbreaker:
    instances:
      payments:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
  retry:
    instances:
      payments:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2

# Management & Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.yourcompany.yourapp: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"